{"version":3,"sources":["components/UI/Card.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","defaultSelectedYear","onChange","event","onSelectedYearChange","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPoints","map","dataPoint","ExpensesChart","dataPointValues","expenses","amount","totalMaximum","max","chartDataPoints","expense","date","getMonth","console","log","ExpenseDate","month","toLocaleString","day","year","getFullYear","ExpenseItem","title","ExpensesList","items","length","id","Expenses","useState","selectedYear","setSelectedYear","filteredExpenses","filter","exp","toString","ExpenseForm","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","isActive","setIsActive","changeActiveForm","prev","onSubmit","preventDefault","enteredData","Date","onSaveExpenseData","type","min","step","onClick","NewExpense","enteredExpenseData","expenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","color","margin","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3fd3b6a4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Card.css\";\nconst Card = (props) => {\n  const classes = \"card \" + props.className;\n  return <div className={classes}>{props.children}</div>;\n};\nexport default Card;\n","import React from \"react\";\n\nimport \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const yearChangeHandler = (event) => {\n    props.onSelectedYearChange(event.target.value);\n  };\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.defaultSelectedYear} onChange={yearChangeHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import React from 'react';\nimport './ChartBar.css';\n\nconst ChartBar = (props) => {\n    let barFillHeight = \"0%\";\n    if(props.maxValue > 0) {\n        barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n    }\n    return (\n        <div className=\"chart-bar\">\n            <div className=\"chart-bar__inner\">\n                <div className=\"chart-bar__fill\" style={{height: barFillHeight}}></div>\n            </div>\n            <div className=\"chart-bar__label\">{props.label}</div>\n        </div>\n    );\n}\n\nexport default ChartBar;","import React from \"react\";\n\nimport \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\nconst Chart = (props) => {\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={props.maxValue}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n    const dataPointValues = props.expenses.map(dataPoint => dataPoint.amount);\n    const totalMaximum = Math.max(...dataPointValues);\n    \n    let chartDataPoints = [\n        {\n            label: \"JAN\",\n            value: 0,\n        },\n        {\n            label: \"FEB\",\n            value: 0,\n        },\n        {\n            label: \"MAR\",\n            value: 0,\n        },\n        {\n            label: \"APR\",\n            value: 0,\n        },\n        {\n            label: \"MAY\",\n            value: 0,\n        },\n        {\n            label: \"JUN\",\n            value: 0,\n        },\n        {\n            label: \"JUL\",\n            value: 0,\n        },\n        {\n            label: \"AUG\",\n            value: 0,\n        },\n        {\n            label: \"SEP\",\n            value: 0,\n        },\n        {\n            label: \"OCT\",\n            value: 0,\n        },\n        {\n            label: \"NOV\",\n            value: 0,\n        },\n        {\n            label: \"DEC\",\n            value: 0,\n        },\n    ];\n    for(const expense of props.expenses){\n        const expenseMonth = expense.date.getMonth();\n        chartDataPoints[expenseMonth].value += expense.amount; \n    }\n    console.log(chartDataPoints);\n    return <Chart dataPoints = {chartDataPoints} maxValue = {totalMaximum}/>;\n};\n\nexport default ExpensesChart;\n","import React from 'react';\nimport \"./ExpenseDate.css\";\n\nconst ExpenseDate = (props) => {\n  const month = props.date.toLocaleString(\"en-us\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-us\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\nexport default ExpenseDate;\n","import React from 'react';\nimport './ExpenseItem.css';\nimport './ExpenseDate';\nimport ExpenseDate from './ExpenseDate';\nimport Card from './../UI/Card'\nconst ExpenseItem = (props) => {\n\n  return (\n    <Card className='expense-item'>\n      <ExpenseDate date = {props.date} />\n      <div className='expense-item__description'>\n      <h2>{props.title} </h2>\n      <div className='expense-item__price'>$ {props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n      return <h2 className=\"expenses-list__fallback\">No Expense Found !!!</h2>\n  }\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n      <ExpenseItem\n        key={expense.id}\n        title={expense.title}\n        amount={expense.amount}\n        date={expense.date}\n      />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import React, { useState } from \"react\";\nimport Card from \"./../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\n\nimport \"./Expenses.css\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport ExpensesList from \"./ExpensesList\";\nconst Expenses = (props) => {\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n  const selectedYearChangeHandler = (year) => {\n    setSelectedYear(year);\n  };\n  const filteredExpenses = props.items.filter(\n    (exp) => exp.date && exp.date.getFullYear().toString() === selectedYear\n  );\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          defaultSelectedYear={selectedYear}\n          onSelectedYearChange={selectedYearChangeHandler}\n        />\n        <ExpensesChart expenses={filteredExpenses} />\n        <ExpensesList items={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [isActive, setIsActive] = useState(false);\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const enteredData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(enteredData); // sending data to parent component (NewExpense.js)\n    setEnteredTitle(\"\");\n    setEnteredAmount(\"\");\n    setEnteredDate(\"\");\n    changeActiveForm();\n  };\n  const changeActiveForm  = () => {\n    setIsActive((prev) => !prev);\n  }\n  return (\n    <form onSubmit={submitHandler}>\n      {isActive === true ? (\n        <div>\n          <div className=\"new-expense__controls\">\n            <div className=\"new-expense__control\">\n              <label>Title</label>\n              <input\n                type=\"text\"\n                value={enteredTitle}\n                onChange={titleChangeHandler}\n              />\n            </div>\n            <div className=\"new-expense__control\">\n              <label>Amount</label>\n              <input\n                type=\"number\"\n                min=\"0.01\"\n                step=\"0.01\"\n                value={enteredAmount}\n                onChange={amountChangeHandler}\n              />\n            </div>\n            <div className=\"new-expense__control\">\n              <label>Date</label>\n              <input\n                type=\"date\"\n                min=\"2019-01-01\"\n                max=\"2022-12-31-\"\n                value={enteredDate}\n                onChange={dateChangeHandler}\n              />\n            </div>\n          </div>\n          <div className=\"new-expense__actions\">\n            <button onClick={changeActiveForm} >Cancel</button>\n            <button type=\"submit\">Add Expense</button>\n          </div>\n        </div>\n      ) : (\n        <button onClick={changeActiveForm}>Add Expense</button>\n      )}\n    </form>\n  );\n};\nexport default ExpenseForm;\n","import React from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport './NewExpense.css';\n\nconst NewExpense = (props) => {\n    const saveExpenseDataHandler = (enteredExpenseData) => { //for getting the expense data from child elements (ExpenseForm.js)\n        const expenseData = {\n            ...enteredExpenseData,\n            id : Math.random().toString(),\n        }\n        props.onAddExpense(expenseData); // sending new expense data to App.js\n    }\n    return (\n        <div className=\"new-expense\">\n            <ExpenseForm  onSaveExpenseData = {saveExpenseDataHandler} />\n        </div>\n    );\n}\n\nexport default NewExpense;","import React, {useState} from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport \"./components/UI/Card.css\";\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nconst App = () => {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n  const addExpenseHandler = (expense) => {\n    setExpenses((prevExpenses)=>{\n      return [\n        expense,\n        ...prevExpenses\n      ]\n    });\n  }\n  return (\n    <div>\n      <h1 style={{color: 'white', margin : '20px'}} >Expense Manager</h1>\n      <NewExpense onAddExpense ={ addExpenseHandler}/>\n      <Expenses items={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}